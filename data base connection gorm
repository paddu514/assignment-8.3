main.go
package main

import (
_ "github.com/go-sql-driver/mysql"
"github.com/jinzhu/gorm"
_ "github.com/jinzhu/gorm/dialects/mysql"
"log"
)

type UserModel struct{
Id int `gorm:"primary_key";"AUTO_INCREMENT"`
Name string `gorm:"size:255"`
Address string `gorm:"type:varchar(100)"`
}

func main(){
db, err := gorm.Open("mysql", "root:root@tcp(127.0.0.1:3306)/ormdemo?charset=utf8&parseTime=True")
if err != nil {
log.Panic(err)
}
log.Println("Connection Established")
db.DropTableIfExists(&UserModel{})
db.AutoMigrate(&UserModel{})

user:=&UserModel{Name:"John",Address:"New York"}
newUser:=&UserModel{Name:"Martin",Address:"Los Angeles"}


db.Debug().Create(user)

db.Debug().Save(newUser)


db.Debug().Find(&user).Update("address", "California")



db.Debug().Find(&user)
user.Address = "Brisbane"
db.Debug().Save(&user)

db.Debug().Model(&user).Update("Name", "Jack")

db.Debug().Model(&user).Updates(
map[string]interface{}{
"Name": "Amy",
"Address": "Boston",
})

db.Debug().Model(&user).UpdateColumn("Address", "Phoenix")
db.Debug().Model(&user).UpdateColumns(
map[string]interface{}{
"Name": "Taylor",
"Address": "Houston",
})

db.Debug().Find(&user).Update("Address", "San Diego")


db.Debug().Table("user_models").Where("address = ?", "california").Update("name", "Walker")


db.Debug().Table("user_models").Where("address= ?", "San Diego").Delete(&UserModel{})

db.Debug().Where("address = ?", "Los Angeles").First(&user)
log.Println(user)
db.Debug().Where("address = ?", "Los Angeles").Find(&user)
log.Println(user)
db.Debug().Where("address <> ?", "New York").Find(&user)
log.Println(user)

db.Debug().Where("name in (?)", []string{"John", "Martin"}).Find(&user)
log.Println(user)

db.Debug().Where("name LIKE ?", "%ti%").Find(&user)
log.Println(user)

db.Debug().Where("name = ? AND address >= ?", "Martin", "Los Angeles").Find(&user)
log.Println(user)


db.Where("address=?", "Los Angeles").Delete(&UserModel{})


db.Debug().Model(&UserModel{}).Delete(&UserModel{})
}
